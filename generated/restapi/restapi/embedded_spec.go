// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "swagger": "2.0",
  "info": {
    "title": "open-youtube-dislikes-backend",
    "version": "0.0.1"
  },
  "paths": {
    "/video/{id}": {
      "post": {
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/VideoResponse"
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/VideoID"
        },
        {
          "$ref": "#/parameters/XUserID"
        },
        {
          "name": "video",
          "in": "body",
          "schema": {
            "$ref": "#/definitions/Video"
          }
        }
      ]
    },
    "/video/{id}/dislike": {
      "post": {
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/VideoID"
        },
        {
          "$ref": "#/parameters/XUserID"
        },
        {
          "name": "action",
          "in": "body",
          "required": true,
          "schema": {
            "$ref": "#/definitions/Action"
          }
        }
      ]
    },
    "/video/{id}/like": {
      "post": {
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/VideoID"
        },
        {
          "$ref": "#/parameters/XUserID"
        },
        {
          "name": "action",
          "in": "body",
          "required": true,
          "schema": {
            "$ref": "#/definitions/Action"
          }
        }
      ]
    }
  },
  "definitions": {
    "Action": {
      "type": "string",
      "enum": [
        "add",
        "remove"
      ]
    },
    "Video": {
      "type": "object",
      "properties": {
        "comments": {
          "type": "integer"
        },
        "dislikes": {
          "type": "integer"
        },
        "id": {
          "type": "string"
        },
        "idHash": {
          "type": "string"
        },
        "likes": {
          "type": "integer"
        },
        "publishedAt": {
          "type": "integer"
        },
        "subscribers": {
          "type": "integer"
        },
        "views": {
          "type": "integer"
        }
      }
    },
    "VideoResponse": {
      "type": "object",
      "properties": {
        "dislikes": {
          "type": "integer"
        },
        "formattedDislikes": {
          "description": "Formatted number of dislikes",
          "type": "string"
        },
        "hasDisliked": {
          "type": "boolean"
        },
        "hasLiked": {
          "type": "boolean"
        }
      }
    }
  },
  "parameters": {
    "VideoID": {
      "type": "string",
      "description": "Video ID",
      "name": "id",
      "in": "path",
      "required": true
    },
    "XUserID": {
      "type": "string",
      "description": "User ID",
      "name": "X-User-ID",
      "in": "header",
      "required": true
    }
  }
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "swagger": "2.0",
  "info": {
    "title": "open-youtube-dislikes-backend",
    "version": "0.0.1"
  },
  "paths": {
    "/video/{id}": {
      "post": {
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/VideoResponse"
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "parameters": [
        {
          "type": "string",
          "description": "Video ID",
          "name": "id",
          "in": "path",
          "required": true
        },
        {
          "type": "string",
          "description": "User ID",
          "name": "X-User-ID",
          "in": "header",
          "required": true
        },
        {
          "name": "video",
          "in": "body",
          "schema": {
            "$ref": "#/definitions/Video"
          }
        }
      ]
    },
    "/video/{id}/dislike": {
      "post": {
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "parameters": [
        {
          "type": "string",
          "description": "Video ID",
          "name": "id",
          "in": "path",
          "required": true
        },
        {
          "type": "string",
          "description": "User ID",
          "name": "X-User-ID",
          "in": "header",
          "required": true
        },
        {
          "name": "action",
          "in": "body",
          "required": true,
          "schema": {
            "$ref": "#/definitions/Action"
          }
        }
      ]
    },
    "/video/{id}/like": {
      "post": {
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "parameters": [
        {
          "type": "string",
          "description": "Video ID",
          "name": "id",
          "in": "path",
          "required": true
        },
        {
          "type": "string",
          "description": "User ID",
          "name": "X-User-ID",
          "in": "header",
          "required": true
        },
        {
          "name": "action",
          "in": "body",
          "required": true,
          "schema": {
            "$ref": "#/definitions/Action"
          }
        }
      ]
    }
  },
  "definitions": {
    "Action": {
      "type": "string",
      "enum": [
        "add",
        "remove"
      ]
    },
    "Video": {
      "type": "object",
      "properties": {
        "comments": {
          "type": "integer"
        },
        "dislikes": {
          "type": "integer"
        },
        "id": {
          "type": "string"
        },
        "idHash": {
          "type": "string"
        },
        "likes": {
          "type": "integer"
        },
        "publishedAt": {
          "type": "integer"
        },
        "subscribers": {
          "type": "integer"
        },
        "views": {
          "type": "integer"
        }
      }
    },
    "VideoResponse": {
      "type": "object",
      "properties": {
        "dislikes": {
          "type": "integer"
        },
        "formattedDislikes": {
          "description": "Formatted number of dislikes",
          "type": "string"
        },
        "hasDisliked": {
          "type": "boolean"
        },
        "hasLiked": {
          "type": "boolean"
        }
      }
    }
  },
  "parameters": {
    "VideoID": {
      "type": "string",
      "description": "Video ID",
      "name": "id",
      "in": "path",
      "required": true
    },
    "XUserID": {
      "type": "string",
      "description": "User ID",
      "name": "X-User-ID",
      "in": "header",
      "required": true
    }
  }
}`))
}
